---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
# Project Name
  PJName:
    Description: Name of this project
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: MyPJ

# VPC
  VpcCidrBlock:
    Description: Input a VPC IPv4 CidrBlock. ex) 10.0.0.0/16
    Type: String
    Default: 10.0.0.0/16

# Public Subnet1
  AZ1:
    Description: Select a AZ where Public Subnet will be created.
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCidrBlock1:
    Description: Input a Public Subnet IPv4 CidrBlock.  ex) 10.0.1.0/24
    Type: String
    Default: 10.0.0.0/24

# Public Subnet2
  AZ2:
    Description: Select a AZ where Public Subnet will be created.
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCidrBlock2:
    Description: Input a Public Subnet IPv4 CidrBlock.  ex) 10.0.1.0/24
    Type: String
    Default: 10.0.2.0/24


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Project Name
        Parameters: 
          - PJName
      - Label:
          default: VPC
        Parameters: 
          - VpcCidrBlock
      - Label:
          default: Public Subnet1
        Parameters: 
          - AZ1
          - PublicSubnetCidrBlock1
      - Label:
          default: Public Subnet2
        Parameters: 
          - AZ2
          - PublicSubnetCidrBlock2


Resources:
# VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: !Sub ${PJName}-vpc

# PublicSubnet1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref PublicSubnetCidrBlock1
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${PJName}-pub-sub1

# PublicSubnet2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Ref AZ2
      CidrBlock: !Ref PublicSubnetCidrBlock2
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${PJName}-pub-sub2

# InternetGW
  InternetGW:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub ${PJName}-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref VPC

# RouteTable for Public Subnet
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${PJName}-pub-rtb

  PublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGW
      RouteTableId: !Ref RouteTable

  PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PublicSubnet2


Outputs:
  Vpc:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${PJName}-Vpc
  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${PJName}-PublicSubnet1
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${PJName}-PublicSubnet2
